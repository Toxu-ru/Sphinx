# для 3.1.1.
##################### POSTS ##################################################
source posts
{

	type					= mysql
	sql_host                = localhost
	sql_user				= root
	sql_pass				=
	sql_db					= cms
	sql_port				= 3306	# optional, default is 3306

    sql_query_pre = SET NAMES utf8
    sql_query 				= \
		SELECT id, UNIX_TIMESTAMP(date_pub) AS date, user_id as user, title, content \
		FROM cms_con_post ORDER BY title DESC

    sql_attr_uint           = user
    sql_attr_timestamp      = date
	sql_ranged_throttle	= 0
}

source posts_delta : posts
{
    sql_query_pre   =
    sql_query_pre = SET NAMES utf8
    sql_query           = \
		SELECT id, UNIX_TIMESTAMP(date_pub) AS date, user_id as user, title, content \
		FROM  cms_con_post ORDER BY title DESC
}

index posts {
	source = posts
	path = c:/Sphinx/data/posts
	mlock			= 0
	min_word_len = 2
	min_stemming_len = 5
	min_prefix_len	= 0
	min_infix_len		= 0
	html_strip				= 1
    docinfo = extern
    morphology = stem_enru

	#stopwords = /usr/local/etc/sphinx.stopwords
	#wordforms = /usr/local/etc/sphinx.wordforms
 

}


index posts_delta : posts
{
    path            = c:/Sphinx/data/posts_delta
    source          = posts_delta
}


##################### COMMENTS ##################################################
source comments
{
	type					= mysql
	sql_host                = localhost
	sql_user				= root
	sql_pass				=
	sql_db					= cms
	sql_port				= 3306	# optional, default is 3306

    sql_query_pre = SET NAMES utf8
	sql_query= SELECT id, UNIX_TIMESTAMP(date_pub) AS date, user_id as user, rating, content FROM cms_comments
	

    sql_attr_uint           = user
    sql_attr_bigint         = rating
    sql_attr_timestamp      = date
	sql_ranged_throttle	= 0
}


source comments_delta : comments
{
    sql_query_pre   =
    sql_query_pre = SET NAMES utf8
	sql_query  = SELECT id, UNIX_TIMESTAMP(date_pub) AS date, user_id as user, rating, content FROM cms_comments WHERE date_pub > date_sub(now(), interval 1 day)
}

index comments {
	source = comments
	path = c:/Sphinx/data/comments
	mlock			= 0
	min_word_len = 2
	min_stemming_len = 5
	min_prefix_len	= 0
	min_infix_len		= 0
	html_strip				= 1
    docinfo = extern
    morphology = stem_enru
    
	#stopwords = /usr/local/etc/sphinx.stopwords
	#wordforms = /usr/local/etc/sphinx.wordforms
}

# all the parameters are copied from the parent index,
# and may then be overridden in this index definition
index comments_delta : comments
{
    path            = c:/Sphinx/data/comments_delta
    source          = comments_delta
}





#############################################################################
## indexer settings
#############################################################################

indexer
{
	# memory limit, in bytes, kiloytes (16384K) or megabytes (256M)
	# optional, default is 32M, max is 2047M, recommended is 256M to 1024M
	mem_limit			= 512M

	# maximum IO calls per second (for I/O throttling)
	# optional, default is 0 (unlimited)
	#
	# max_iops			= 40


	# maximum IO call size, bytes (for I/O throttling)
	# optional, default is 0 (unlimited)
	#
	# max_iosize		= 1048576
}

#############################################################################
## searchd settings
#############################################################################

searchd
{

	listen			= 127.0.0.1:9306:mysql41
	pid_file		= C:/Sphinx/log/searchd.pid
	log			= C:/Sphinx/log/searchd.log
	query_log		= C:/Sphinx/log/query.log
	#binlog_path		= c:/sphinx/data/binlog/	
	mysql_version_string	= 5.0.0
 
	seamless_rotate		= 1
	preopen_indexes		= 1
	unlink_old		= 1



	# hostname, port, or hostname:port, or /unix/socket/path to listen on
	# multi-value, multiple listen points are allowed
	# optional, default is 0.0.0.0:3312 (listen on all interfaces, port 3312)
	#
	# listen				= 127.0.0.1
	# listen				= 192.168.0.1:3312
	# listen				= 3312
	# listen				= /var/run/searchd.sock
	##listen				        = 9312
	##listen = 9306:mysql41


	# log file, searchd run info is logged here
	# optional, default is 'searchd.log'
	##log					= /var/log/searchd.log

	# query log file, all search queries are logged here
	# optional, default is empty (do not log queries)
	#query_log			= /var/log/query.log

	# client read timeout, seconds
	# optional, default is 5
	read_timeout		= 5

	# request timeout, seconds
	# optional, default is 5 minutes
	client_timeout		= 30

	# maximum amount of children to fork (concurrent searches to run)
	# optional, default is 0 (unlimited)
	max_children		= 10
	workers			= threads
	# workers		= prefork

	# PID file, searchd process ID file name
	# mandatory
	#pid_file			= /var/run/searchd.pid

	# seamless rotate, prevents rotate stalls if precaching huge datasets
	# optional, default is 1
	#seamless_rotate		= 1

	# whether to forcibly preopen all indexes on startup
	# optional, default is 0 (do not preopen)
	#preopen_indexes		= 1

	# whether to unlink .old index copies on succesful rotation.
	# optional, default is 1 (do unlink)
	#unlink_old			= 1

	# attribute updates periodic flush timeout, seconds
	# updates will be automatically dumped to disk this frequently
	# optional, default is 0 (disable periodic flush)
	#
	# attr_flush_period	= 900


	# instance-wide ondisk_dict defaults (per-index value take precedence)
	# optional, default is 0 (precache all dictionaries in RAM)
	#
	# ondisk_dict_default	= 1

    # max allowed network packet size
	# limits both query packets from clients, and responses from agents
	# optional, default size is 8M
	max_packet_size		= 8M

	# crash log path
	# searchd will (try to) log crashed query to 'crash_log_path.PID' file
	# optional, default is empty (do not create crash logs)
	#
	# crash_log_path		= /var/log/crash


	# max allowed per-query filter count
	# optional, default is 256
	max_filters			= 256

	# max allowed per-filter values count
	# optional, default is 4096
	max_filter_values	= 4096
}

# --eof--
